// src/qualification-questions.js

const qualificationFlow = {
    inicial: {
        message: "Vejo que voc√™ est√° buscando um im√≥vel! üòä Para eu poder te ajudar melhor, me conta: voc√™ procura um lugar para morar ou est√° pensando em investimento?",
        options: ["morar", "investir", "ambos"],
        next: "tipo_imovel"
    },
    
    tipo_imovel: {
        message: "√ìtimo! E voc√™ j√° tem prefer√™ncia entre casa ou apartamento? Ou est√° aberto a ambas op√ß√µes?",
        options: ["casa", "apartamento", "ambos"],
        next: "cidade"
    },
    
    cidade: {
        message: "Perfeito! Em qual cidade voc√™ prefere? Atendemos:\n‚Ä¢ Balne√°rio Cambori√∫\n‚Ä¢ Florian√≥polis\n‚Ä¢ S√£o Jos√©\n‚Ä¢ Itaja√≠\n‚Ä¢ Blumenau",
        options: ["balne√°rio cambori√∫", "florian√≥polis", "s√£o jos√©", "itaja√≠", "blumenau"],
        next: "quartos"
    },
    
    quartos: {
        message: "E quantos quartos voc√™ precisa? Isso me ajuda a filtrar as melhores op√ß√µes!",
        options: ["1", "2", "3", "4 ou mais"],
        next: "pronto"
    },
    
    pronto: {
        message: "Excelente! Agora j√° sei exatamente o que voc√™ procura. Vou buscar as melhores op√ß√µes para voc√™! üè†‚ú®",
        action: "search"
    }
};

function getQualificationResponse(stage, userResponse) {
    const currentStage = qualificationFlow[stage] || qualificationFlow.inicial;
    
    // Analisa a resposta e decide o pr√≥ximo passo
    if (currentStage.next) {
        return {
            nextStage: currentStage.next,
            message: qualificationFlow[currentStage.next].message
        };
    }
    
    return {
        action: currentStage.action,
        message: currentStage.message
    };
}

module.exports = { getQualificationResponse, qualificationFlow };